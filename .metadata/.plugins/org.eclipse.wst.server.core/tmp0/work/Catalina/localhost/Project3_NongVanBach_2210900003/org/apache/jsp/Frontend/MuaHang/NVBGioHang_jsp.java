/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-03-19 13:27:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Frontend.MuaHang;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import Model.NVBCartItem;

public final class NVBGioHang_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("Model.NVBCartItem");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Giỏ hàng</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/Frontend/MuaHang/cssGioHang.css\">\r\n");
      out.write("    <script>\r\n");
      out.write("        function togglePaymentForm() {\r\n");
      out.write("            var formDiv = document.getElementById('paymentForm');\r\n");
      out.write("            formDiv.style.display = formDiv.style.display === 'block' ? 'none' : 'block';\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function confirmPayment() {\r\n");
      out.write("            alert('Thanh toán thành công, đơn hàng sẽ giao tới bạn sau vài ngày!');\r\n");
      out.write("            return true; \r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h2>Giỏ hàng của bạn</h2>\r\n");
      out.write("    ");

        List<NVBCartItem> gioHang = (List<NVBCartItem>) session.getAttribute("gioHang");
        if (gioHang == null || gioHang.isEmpty()) {
    
      out.write("\r\n");
      out.write("        <p>Giỏ hàng trống!</p>\r\n");
      out.write("    ");

        } else {
    
      out.write("\r\n");
      out.write("        <table cellpadding=\"10\" cellspacing=\"0\">\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>Tên sản phẩm</th>\r\n");
      out.write("                <th>Hình Ảnh</th>\r\n");
      out.write("                <th>Giá</th>\r\n");
      out.write("                <th>Số lượng</th>\r\n");
      out.write("                <th>Tổng tiền</th>\r\n");
      out.write("                <th>Xóa</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");

                int tongThanhToan = 0;
                for (NVBCartItem item : gioHang) {
                    int tongTien = item.getTongTien();
                    tongThanhToan += tongTien;
            
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>");
      out.print( item.getTenSanPham() );
      out.write("</td>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <img src=\"");
      out.print( request.getContextPath() );
      out.write("/images/");
      out.print( item.getHinhAnh() );
      out.write("\" \r\n");
      out.write("                         alt=\"");
      out.print( item.getTenSanPham() );
      out.write("\" \r\n");
      out.write("                         style=\"width: 80px; height: auto; border-radius: 5px;\">\r\n");
      out.write("                </td>\r\n");
      out.write("                <td>");
      out.print( item.getGia() );
      out.write(" VND</td>\r\n");
      out.write("                <td>");
      out.print( item.getSoLuong() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( tongTien );
      out.write(" VND</td>\r\n");
      out.write("                <td><a href=\"");
      out.print( request.getContextPath() );
      out.write("/NVBGioHang?action=remove&id=");
      out.print( item.getSanPhamId() );
      out.write("\">Xóa</a></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");

                }
            
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td colspan=\"3\" align=\"right\">Tổng thanh toán:</td>\r\n");
      out.write("                <td colspan=\"2\">");
      out.print( tongThanhToan );
      out.write(" VND</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </table>\r\n");
      out.write("    ");

        }
    
      out.write("\r\n");
      out.write("    <div class=\"buttons\">\r\n");
      out.write("        <a href=\"");
      out.print( request.getContextPath() );
      out.write("/Frontend/MuaHang/NVBListSanPham.jsp\" class=\"continue-btn\">Tiếp tục mua hàng</a>\r\n");
      out.write("        <button type=\"button\" class=\"pay-btn\" onclick=\"togglePaymentForm()\">Thanh toán</button>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Form thanh toán -->\r\n");
      out.write("    <div id=\"paymentForm\" class=\"payment-form-container\">\r\n");
      out.write("        <h2>Thanh Toán</h2>\r\n");
      out.write("        <form action=\"");
      out.print( request.getContextPath() );
      out.write("/NVBThanhToan\" method=\"POST\">\r\n");
      out.write("            <label for=\"hoTen\">Họ Tên:</label>\r\n");
      out.write("            <input type=\"text\" id=\"hoTen\" name=\"hoTen\" placeholder=\"Nhập họ tên của bạn\" required>\r\n");
      out.write("            \r\n");
      out.write("            <label for=\"soDienThoai\">Số Điện Thoại:</label>\r\n");
      out.write("            <input type=\"text\" id=\"soDienThoai\" name=\"soDienThoai\" placeholder=\"Nhập số điện thoại của bạn\" required>\r\n");
      out.write("            \r\n");
      out.write("            <label for=\"diaChi\">Địa Chỉ:</label>\r\n");
      out.write("            <textarea id=\"diaChi\" name=\"diaChi\" placeholder=\"Nhập địa chỉ của bạn\" required></textarea>\r\n");
      out.write("            \r\n");
      out.write("            <!-- Lựa chọn thanh toán --> \r\n");
      out.write("            <fieldset class=\"payment-options-fieldset\">\r\n");
      out.write("                <legend>Chọn phương thức thanh toán:</legend>\r\n");
      out.write("                <label class=\"payment-option\">\r\n");
      out.write("                    <input type=\"radio\" name=\"paymentMethod\" value=\"qr\" checked> Thanh toán qua QR\r\n");
      out.write("                </label>\r\n");
      out.write("                <label class=\"payment-option\">\r\n");
      out.write("                    <input type=\"radio\" name=\"paymentMethod\" value=\"card\"> Thanh toán bằng Visa/Thẻ ghi nợ\r\n");
      out.write("                </label>\r\n");
      out.write("                <label class=\"payment-option\">\r\n");
      out.write("                    <input type=\"radio\" name=\"paymentMethod\" value=\"true\"> Thanh toán trả sau\r\n");
      out.write("                </label>\r\n");
      out.write("            </fieldset>\r\n");
      out.write("            <button type=\"submit\" class=\"pay-btn-succes\" onclick=\"return confirmPayment();\">Xác Nhận Thanh Toán</button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
